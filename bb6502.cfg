MEMORY {
    ZP:     start = $0000, size = $0100, type = rw;
    RAM:    start = $0200, size = $3D00, type = rw, file = "";
    BASROM: start = $8000, size = $8000, type = ro, file = %O, fill = yes, fillval = $00;
    DUMMY:  start = $0000, size = $00FF, file = "";
}

SEGMENTS {
    ZEROPAGE:            load = ZP,        type = zp;
    SERIAL_INPUT_BUFFER: load = RAM,       type = rw;
    HEADER:              load = BASROM,    type = ro;
    VECTORS:             load = BASROM,    type = ro;
    KEYWORDS:            load = BASROM,    type = ro;
    ERROR:               load = BASROM,    type = ro;
    CODE:                load = BASROM,    type = ro;
    CHRGET:              load = BASROM,    type = ro;
    INIT:                load = BASROM,    type = ro;
    EXTRA:               load = BASROM,    type = ro;
    DUMMY:               load = DUMMY; # don't include
    
    BIOS:                load = BASROM,    type = ro;
    WOZMON:              load = BASROM,    type = ro, offset = $7f00, define = yes, optional = yes;
    RESETVECTORS:        load = BASROM,    type = ro, offset = $7ffa, define = yes;
}

